# Author = Trikashnyi Maksim Dmitrievich
# Group = P3114
# Date = 05.10.2025
import unittest
from tasks import Informatics_Lab3_Task3


class Test1(unittest.TestCase):
    def test1(self):
        st = 2
        text = 'Футбольный клуб «Реал Мадрид» является 15-кратным обладателем главного футбольного европейского ' \
               'трофея – Лиги Чемпионов. Данный турнир организован Союзом европейских футбольных ассоциаций (УЕФА). ' \
               'Идея о континентальном футбольном турнире пришла к журналисту Габриэлю Ано в 1955 году.'
        result = 'Футбольного клуб «Реал Мадрид» является 15-кратным обладателем главного футбольного европейских ' \
                 'трофея – Лиги Чемпионов. Данный турнир организован Союзом европейских футбольного ассоциаций (' \
                 'УЕФА). Идея о континентальном футбольного турнире пришла к журналисту Габриэлю Ано в 1955 году.'
        self.assertEqual(result, Informatics_Lab3_Task3.main(st, text))

    def test2(self):
        st = 1
        text = 'Красивый цветок стоял на красивом столе. Красивая ваза дополняла красивый интерьер.'
        result = 'Красивый цветок стоял на красивый столе. Красивый ваза дополняла красивый интерьер.'
        self.assertEqual(result, Informatics_Lab3_Task3.main(st, text))

    def test3(self):
        st = 3
        text = 'Новый дом построен. Новая школа открыта. Новое здание сдано. Новый проект запущен.'
        result = 'Новое дом построен. Новое школа открыта. Новое здание сдано. Новое проект запущен.'
        self.assertEqual(result, Informatics_Lab3_Task3.main(st, text))

    def test4(self):
        st = 2
        text = 'Сине-зеленый. сине-зеленая. синий. зеленые. синяя. зеленое. красно-желтый красная красные желтая желтые'
        result = 'Сине-зеленая. сине-зеленая. синяя. зеленое. синяя. зеленое. красно-желтый красные красные желтые желтые'
        self.assertEqual(result, Informatics_Lab3_Task3.main(st, text))

    def test5(self):
        st = 2
        text = 'Старый мастер работал над старым механизмом. Новый ученик наблюдал за старой работой. Новые ' \
               'инструменты лежали на старом верстаке.'
        result = 'Старым мастер работал над старым механизмом. Новые ученик наблюдал за старым работой. Новые ' \
                 'инструменты лежали на старым верстаке.'
        self.assertEqual(result, Informatics_Lab3_Task3.main(st, text))


if __name__ == '__main__':
    unittest.main()